Файл vk_acs_2.py

Импорт модулей:
1) vk_api - Python модуль для создания скриптов для ВКонтакте (vk.com API wrapper)
2) operator экспортирует набор эффективных функций, соответствующих внутренним операторам Python

Ручной ввод:
token — токен от VK (требуется введение токена пользователем с клавиатуры)


Функции:
1)get_my_information() - функция для получения основных сведений владельца токена. На выход дает словарь с ключами: город-'city',  возраст (год рождения) — 'ages'б пол - 'sex'

2)get_photos() - функция для получения ссылки на фотографии. На вход получает: числовой ID пользователя и статус страницы пользователя: False — страница закрыта, информация не доступна.
Функция получает информацию о фотографиям с Профиля пользователя, проводит сортировку фотографий по количеству лайков.
Для пользователей с открытой странице функция возвращает словарь с ключами: 'photo_link' — ссылки на 3 фотографии, 'photo_likes' — количество лайков фото

3)search_friends ()  функция для поиска потенциальных друзей по основным параметрам пользователя токена.
-Функция получает основные параметры владельца токена из функции get_my_information()
-делает выгрузку подходящих по параметрам пользователей ВК
Функция возвращает список словарей пользователей ВК, попадающих под нужные характеристики. Выходные поля словаря: 'first_name' — имя, 'last_name'-Фамилия, 'link_user'- ссылка на профиль пользователя, список словарей с фотографиями: 'photo_link' — ссылки на 3 фотографии, 'photo_likes' — количество лайков фото

Проверка:
print(get_my_information()) - проверка полученной информации и владельце токена

with open ('result.txt', 'w') as file:
    #     for n, row in enumerate(search_friends()):
    #         file.write(f'{n}) {str(row)}' + '\n')
    #     print('Done') 
выгрузка результата поиска в файл

print(search_friends()) - вывод на экран  потенциальных друзей по основным параметрам пользователя токена

print(get_photos('214553814', True)) — вывод на экран фотографий пользователя с открытым профелем



 

